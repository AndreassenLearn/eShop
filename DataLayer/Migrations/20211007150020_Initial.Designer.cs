// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(EShopContext))]
    [Migration("20211007150020_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataLayer.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            Name = "Denmark"
                        },
                        new
                        {
                            CountryId = 2,
                            Name = "Germany"
                        },
                        new
                        {
                            CountryId = 3,
                            Name = "Switzerland"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            ImageId = 1,
                            Url = "https://www.roco.cc/doc/idimages/def2/1633611600/123106022013017006010001016009105021031014117.jpg"
                        },
                        new
                        {
                            ImageId = 2,
                            Url = "https://www.roco.cc/doc/idimages/def2/1633611600/123109024010020014010001016009105021031014117.jpg"
                        },
                        new
                        {
                            ImageId = 3,
                            Url = "https://www.roco.cc/doc/idimages/def2/1633611600/123109026011022009010001016009105021031014117.jpg"
                        },
                        new
                        {
                            ImageId = 4,
                            Url = "https://www.roco.cc/doc/idimages/def2/1633611600/123109023008017012010001016009105021031014117.jpg"
                        },
                        new
                        {
                            ImageId = 5,
                            Url = "https://www.roco.cc/doc/idimages/def2/1633615200/126105029012017019089002030013103027028015121010010.jpg"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("TagId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductId");

                    b.HasIndex("TagId");

                    b.ToTable("Product");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Product");
                });

            modelBuilder.Entity("DataLayer.Models.RailwayCompany", b =>
                {
                    b.Property<int>("RailwayCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RailwayCompanyId");

                    b.HasIndex("CountryId");

                    b.ToTable("RailwayCompany");

                    b.HasData(
                        new
                        {
                            RailwayCompanyId = 1,
                            CountryId = 1,
                            Name = "DSB"
                        },
                        new
                        {
                            RailwayCompanyId = 2,
                            CountryId = 2,
                            Name = "DB"
                        },
                        new
                        {
                            RailwayCompanyId = 3,
                            CountryId = 2,
                            Name = "DR"
                        },
                        new
                        {
                            RailwayCompanyId = 4,
                            CountryId = 3,
                            Name = "SBB"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.StockStatus", b =>
                {
                    b.Property<int>("StockStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("NextStock")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("StockStatusId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("StockStatus");

                    b.HasData(
                        new
                        {
                            StockStatusId = 1,
                            Amount = 23L,
                            NextStock = new DateTime(2021, 11, 7, 17, 0, 19, 449, DateTimeKind.Local).AddTicks(4564),
                            ProductId = 1
                        },
                        new
                        {
                            StockStatusId = 2,
                            Amount = 5L,
                            NextStock = new DateTime(2021, 12, 7, 17, 0, 19, 453, DateTimeKind.Local).AddTicks(7554),
                            ProductId = 2
                        },
                        new
                        {
                            StockStatusId = 3,
                            Amount = 2L,
                            NextStock = new DateTime(2021, 10, 23, 17, 0, 19, 453, DateTimeKind.Local).AddTicks(7687),
                            ProductId = 3
                        },
                        new
                        {
                            StockStatusId = 4,
                            Amount = 1L,
                            NextStock = new DateTime(2022, 5, 7, 17, 0, 19, 453, DateTimeKind.Local).AddTicks(7727),
                            ProductId = 4
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Tag", b =>
                {
                    b.Property<string>("TagId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TagId");

                    b.ToTable("Tag");

                    b.HasData(
                        new
                        {
                            TagId = "Sale"
                        },
                        new
                        {
                            TagId = "New"
                        });
                });

            modelBuilder.Entity("ImageProduct", b =>
                {
                    b.Property<int>("ImagesImageId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsProductId")
                        .HasColumnType("int");

                    b.HasKey("ImagesImageId", "ProductsProductId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("ImageProduct");

                    b.HasData(
                        new
                        {
                            ImagesImageId = 1,
                            ProductsProductId = 1
                        },
                        new
                        {
                            ImagesImageId = 3,
                            ProductsProductId = 2
                        },
                        new
                        {
                            ImagesImageId = 2,
                            ProductsProductId = 3
                        },
                        new
                        {
                            ImagesImageId = 4,
                            ProductsProductId = 4
                        },
                        new
                        {
                            ImagesImageId = 5,
                            ProductsProductId = 4
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Products.DigitalDecoder", b =>
                {
                    b.HasBaseType("DataLayer.Models.Product");

                    b.Property<int>("Interface")
                        .HasColumnType("int");

                    b.Property<bool>("Sound")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("DigitalDecoder");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "Suitable for Gauge H0. The decoder is equipped with the RailCom® function. Maximum motor current: 1.2 A.",
                            Name = "PluX22 sound decoder (NEM 658)",
                            Price = 92.4m,
                            Interface = 0,
                            Sound = true
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Products.Locomotive", b =>
                {
                    b.HasBaseType("DataLayer.Models.Product");

                    b.Property<bool>("AutoCoupling")
                        .HasColumnType("bit");

                    b.Property<int>("Control")
                        .HasColumnType("int");

                    b.Property<int?>("DigitalDecoderId")
                        .HasColumnType("int");

                    b.Property<int>("Epoch")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<float>("Length")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("real");

                    b.Property<int>("LocoType")
                        .HasColumnType("int");

                    b.Property<int>("NumOfAxels")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("NumOfDrivenAxels")
                        .HasColumnType("int");

                    b.Property<int>("RailWayCompanyId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Scale")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.HasIndex("DigitalDecoderId");

                    b.HasIndex("RailWayCompanyId");

                    b.HasDiscriminator().HasValue("Locomotive");

                    b.HasData(
                        new
                        {
                            ProductId = 2,
                            Description = "The 023 series was a true all-round genius. The locomotive hauled commuter trains, fast and express trains. Sometimes they hauled even freight trains. The newly designed locomotive of the class 023 (which until 1968 was designated class 23) was being used even in the epoch IV. On Dec. 31 1971, 76 locomotives were a permanent part of the rolling stock of the DB and without exception they were stationed at the three railway depots Saarbrücken, Kaiserslautern and Crailsheim.",
                            Name = "BR 023 040-9",
                            Price = 229.9m,
                            TagId = "New",
                            AutoCoupling = false,
                            Control = 3,
                            Epoch = 4,
                            Length = 24.5f,
                            LocoType = 1,
                            NumOfAxels = 9,
                            NumOfDrivenAxels = 4,
                            RailWayCompanyId = 2,
                            Scale = 1
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "In 1992, the first locomotive Re 460 of the Swiss Federal Railways rolled out of the factory halls of the companies SLM and BBC in Oerlikon, Switzerland. The locomotive became known to the public as \"Lok 2000\". It stands for fast and modern passenger transport in Switzerland. An eye-catching and particularly aerodynamic design with a large front window, roof cladding and beads on the side wall make the class 460 visually an unbeatable rail vehicle.",
                            Name = "Re 460 068-0",
                            Price = 321.9m,
                            AutoCoupling = false,
                            Control = 4,
                            DigitalDecoderId = 1,
                            Epoch = 6,
                            Length = 21.2f,
                            LocoType = 3,
                            NumOfAxels = 4,
                            NumOfDrivenAxels = 4,
                            RailWayCompanyId = 4,
                            Scale = 1
                        },
                        new
                        {
                            ProductId = 4,
                            Description = "In the period between 1942 to 1950, over 7000 units of the class 52 war locomotive were built. These were constructed with as little effort as possible and savings were also made on the material wherever possible. With a weight of 84 tons, the loco achieved an output of 1,192 kW and a top speed of 80 km / h. The Deutsche Bundesbahn mainly got rid of the locomotives as early as 1953 - since it had sufficient machines of the series 50 and series 44 to haul the heavy goods trains. Only a few locomotives built in 1945 remained with the DB until 1962.",
                            Name = "BR 52",
                            Price = 319.9m,
                            TagId = "New",
                            AutoCoupling = false,
                            Control = 3,
                            Epoch = 3,
                            Length = 26.5f,
                            LocoType = 1,
                            NumOfAxels = 10,
                            NumOfDrivenAxels = 4,
                            RailWayCompanyId = 2,
                            Scale = 1
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Products.RailCar", b =>
                {
                    b.HasBaseType("DataLayer.Models.Product");

                    b.Property<int>("Epoch")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<float>("Length")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("real");

                    b.Property<int>("NumOfAxels")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("RailWayCompanyId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Scale")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.HasIndex("RailWayCompanyId");

                    b.HasDiscriminator().HasValue("RailCar");
                });

            modelBuilder.Entity("DataLayer.Models.Product", b =>
                {
                    b.HasOne("DataLayer.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("DataLayer.Models.RailwayCompany", b =>
                {
                    b.HasOne("DataLayer.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DataLayer.Models.StockStatus", b =>
                {
                    b.HasOne("DataLayer.Models.Product", "Product")
                        .WithOne("StockStatus")
                        .HasForeignKey("DataLayer.Models.StockStatus", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ImageProduct", b =>
                {
                    b.HasOne("DataLayer.Models.Image", null)
                        .WithMany()
                        .HasForeignKey("ImagesImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataLayer.Models.Products.Locomotive", b =>
                {
                    b.HasOne("DataLayer.Models.Products.DigitalDecoder", "DigitalDecoder")
                        .WithMany()
                        .HasForeignKey("DigitalDecoderId");

                    b.HasOne("DataLayer.Models.RailwayCompany", "RailwayCompany")
                        .WithMany()
                        .HasForeignKey("RailWayCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalDecoder");

                    b.Navigation("RailwayCompany");
                });

            modelBuilder.Entity("DataLayer.Models.Products.RailCar", b =>
                {
                    b.HasOne("DataLayer.Models.RailwayCompany", "RailwayCompany")
                        .WithMany()
                        .HasForeignKey("RailWayCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RailwayCompany");
                });

            modelBuilder.Entity("DataLayer.Models.Product", b =>
                {
                    b.Navigation("StockStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
