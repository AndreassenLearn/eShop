@page "/locomotives/details/{LocomotiveId:int}"
@using ServiceLayer
@using ServiceLayer.LocomotiveService
@using Blazor.Components
@inject HttpClient httpClient
@inject IJSRuntime JSRuntime

<div class="container">
  @if (Locomotive != null)
  {
    <h2>@Locomotive.Name</h2>
    <div class="row">
      <div class="col">
        @if (Locomotive.Images?.Count > 1)
        {
          <div id="carouselIndicators" class="carousel slide" data-ride="carousel">
            <ol class="carousel-indicators">
              @{ int slideNum = 0; }
              @foreach (ImageDto image in Locomotive.Images)
              {
                <li style="background-color: gray" data-target="#carouselIndicators" data-slide-to="@slideNum++" class="@(Locomotive.Images.First() == image ? "active" : "")"></li>
              }
            </ol>
            <div class="carousel-inner">
              @foreach (ImageDto image in Locomotive.Images)
              {
                <div class="carousel-item @(Locomotive.Images.First() == image ? "active" : "")">
                  <img class="d-block w-100" src="/img/products/@image.Path" alt="Product image">
                </div>
              }
            </div>
            <a class="carousel-control-prev" href="#carouselIndicators" role="button" data-slide="prev">
              <i class="oi oi-arrow-left" style="color: gray" aria-hidden="true"></i>
              <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#carouselIndicators" role="button" data-slide="next">
              <i class="oi oi-arrow-right" style="color: gray" aria-hidden="true"></i>
              <span class="sr-only">Next</span>
            </a>
          </div>
        }
        else
        {
          <img class="d-block w-100" src="/img/products/@Locomotive.Images.FirstOrDefault()?.Path" alt="Product image">
        }
      </div>
    </div>
    <div class="row">
      <div class="col col-12">
        <p>@Locomotive.Description</p>
        <hr />
      </div>
      <div class="col col-6">
        <h2><i style="color: darkred">@Locomotive.Tag</i></h2>
      </div>
      <div class="col col-6 text-right">
        <h3>€ @Locomotive.Price</h3>
        @if (@Locomotive.AmountInStock > 0)
        {
          <small>(@Locomotive.AmountInStock left in stock) </small>
        }
        <AddToBasketButton ProductId="Locomotive.ProductId" InStock="Locomotive.AmountInStock > 0"></AddToBasketButton>
      </div>
      <div class="col">
        <div class="row">
          <div class="col col-12">
            <h4 class="mb-3">Details</h4>
          </div>
          <div class="col col-6">

            <table class="table table-hover">
              <tbody>
                <tr>
                  <th scope="row">Name</th>
                  <td>@Locomotive.Name</td>
                </tr>
                <tr>
                  <th scope="row">Railway company</th>
                  <td>@Locomotive.RailwayCompanyName</td>
                </tr>
                <tr>
                  <th scope="row">Country</th>
                  <td>@Locomotive.RailwatCompanyCountryName</td>
                </tr>
                <tr>
                  <th scope="row">Epoch</th>
                  <td>@Locomotive.Epoch</td>
                </tr>
                <tr>
                  <th scope="row">Locomotive type</th>
                  <td>@Locomotive.LocoType</td>
                </tr>
              </tbody>
            </table>

          </div>
          <div class="col col-6">

            <table class="table table-hover">
              <tbody>
                <tr>
                  <th scope="row">Scale</th>
                  <td>@Locomotive.Scale</td>
                </tr>
                <tr>
                  <th scope="row">Length</th>
                  <td>@Locomotive.Length cm</td>
                </tr>
                <tr>
                  <th scope="row">Number of axels</th>
                  <td>@Locomotive.NumOfAxels</td>
                </tr>
                <tr>
                  <th scope="row">Number of driven axels</th>
                  <td>@Locomotive.NumOfDrivenAxels</td>
                </tr>
                <tr>
                  <th scope="row">Control</th>
                  <td>@Locomotive.Control</td>
                </tr>
                <tr>
                  <th scope="row">Auto coupling</th>
                  <td>@(Locomotive.AutoCoupling == true ? "Yes" : "No")</td>
                </tr>
              </tbody>
            </table>

          </div>
        </div>
      </div>
    </div>
  }
</div>

@code {
  [Parameter]
  public int LocomotiveId { get; set; }
  public DetailsLocomotiveDto Locomotive { get; set; }

  protected override async Task OnInitializedAsync()
  {
    Locomotive = await httpClient.GetFromJsonAsync<DetailsLocomotiveDto>($"/locomotive/details/{LocomotiveId}");
  }

  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    await JSRuntime.InvokeVoidAsync("startCarousels");
  }
}
